#!/usr/bin/python3
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix = [[1, 2, 3], [4, 5, 6]]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> print(matrix_divided([[1, 2, 3], [1, 2, 9]], float('inf')))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> print(matrix_divided([[1, 2, 3], [1, 2, 3, 4]], 1))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided([[1, 2, 3], [1, 2, 5]], "1"))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> id(matrix) != id(matrix_divided(matrix, 1))
    True

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> print(matrix_divided([],1))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided("",1))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2, 3], 4],1))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> print(matrix_divided())
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> print(matrix_divided([[1, 2, 3], [1, 2, 99]], None))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> print(matrix_divided([[], []], 1))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
